{
  "server": {
    "environment": "test",
    "host": "0.0.0.0",
    "port": "8082",
    "analysis_machine_external_host": "140.252.53.120",
    "analysis_machine_external_port": "22220",
    "help": {
      "self": "global server settings",
      "host": "host ip for test env deployment",
      "port": "port for test env deployment. in production, this is handled by supervisord/gunicorn",
      "environment": "'test' or 'production'"
    }
  },

  "path": {
    "path_logs": "/Users/dmitryduev/_caltech/python/archiver/logs/",
    "path_raw": ["/Users/dmitryduev/_caltech/roboao/_nas_data/VIC_data/"],
    "path_archive": "/Users/dmitryduev/_caltech/roboao/_archive/",
    "path_tmp": "/Users/dmitryduev/_caltech/roboao/_tmp/",
    "help": {
      "self": "path to all kinds of stuff",
      "path_logs": "path to store logs",
      "path_raw": "list with path(s) to data sources",
      "path_archive": "list with path to store processed data",
      "path_tmp": "path to store temporary stuff"
    }
  },

  "database": {
    "host": "127.0.0.1",
    "port": 27017,
    "db": "roboao",
    "user": "roboao",
    "pwd": "roboaokicksass",
    "replicaset": "analysis",
    "collection_obs": "objects",
    "collection_aux": "aux",
    "collection_pwd": "users",
    "help": {
      "self": "Details about the database",
      "host": "host running MongoDB replica from replica set",
      "port": "port where MongoDB is running on host",
      "db": "main DB dame",
      "user": "global DB access user name",
      "pwd": "global DB access password",
      "replicaset": "replica set name",
      "collection_obs": "collection with science data",
      "collection_aux": "collection with auxiliary data (seeing, summary Strehls, contrast curves etc.)",
      "collection_pwd": "collection with user login/data access credentials"
    }
  },

  "parallel": {
    "n_workers": 4,
    "threads_per_worker": 1,

    "help": {
      "self": "settings for running parallel computation with dask.distributed",
      "n_workers": "number of separate processes",
      "threads_per_worker": "number of threads per process"
    }
  },

  "misc": {
    "archiving_start_date": "2017/03/01",
    "max_retries": 20,
    "logging_level": "debug",
    "nap_at_night": false,
    "nap_time_frame": "local",
    "nap_time_start": "23:30",
    "nap_time_stop": "04:00",
    "loop_interval": 0.2,

    "help": {
      "self": "miscellaneous stuff",
      "archiving_start_date": "only look at data starting from date YYYY/MM/DD",
      "max_retries": "try redoing failed stuff this many times",
      "logging_level": "'debug', 'info', 'warning', 'error', or 'critical'",
      "nap_at_night": "do not interfere with the nightly operations if true",
      "nap_time_frame": "'local' or 'UTC'?",
      "nap_time_start": "HH:MM in 24-hour format",
      "nap_time_stop": "HH:MM in 24-hour format. could be next morning",
      "loop_interval": "interval [minutes] to rerun the archiver if not nap time"
    }
  },

  "telescope": {
    "Palomar_P60": {
      "fov_x": 44,
      "fov_y": 44,
      "scale": 0.043,
      "scale_red": 0.0215,
      "scale_IR": 0.0794,
      "D1": 1.524,
      "D2": 0.578,
      "Strehl_factor": {
        "Sg": [0.0751567096096, 0.00208455630771],
        "Sr": [0.0448855015043, 0.000718057921982],
        "Si": [0.0301304974759, 0.000318888753944],
        "Sz": [0.0220061273615, 0.000168553937903],
        "lp600": [0.033937930236, 0.000422911250255]
      }
    },
    "KPNO_2.1m": {
      "fov_x": 36,
      "fov_y": 36,
      "scale": 0.0351594,
      "scale_red": 0.0175797,
      "scale_IR": null,
      "D1": 1.85,
      "D2": 0.879,
      "Strehl_factor": {
        "Sg": [0.0650379861553, 0.00195904513521],
        "Sr": [0.0393821289397, 0.00067801330536],
        "Si": [0.0266019992502, 0.000301292354134],
        "Sz": [0.0194992892766, 0.000159280151932],
        "lp600": [0.0299002454758, 0.000399512263876],
        "c": [0.0299002454758, 0.000399512263876]
      }
    },

    "help": {
      "self": "Telescope/camera data"
    }
  },

  "pipeline": {
    "bright_star": {
      "pipeline_settings_template": "/Users/dmitryduev/_caltech/python/archiver/roboao/pipeline_settings.txt",
      "pipeline_executable": "/Users/dmitryduev/_caltech/roboao/Pipeline/roboao_pipeline/image_reconstruction",
      "go": {
        "science_program.program_id": "not in [24]",

        "help": {
          "self": "describe necessary conditions for observations to be pushed through pipeline. key: valid DB field, value: valid python expression"
        }
      },
      "verbose": true,
      "high_contrast": {
        "path_psf_reference_library": "/Users/dmitryduev/_caltech/roboao/_archive/psf_library.fits",
        "win": 100,
        "sigma": 5,
        "nrefs": 5,
        "klip": 1,

        "help": {
          "self": "high contrast PCA pipeline",
          "path_psf_reference_library": "path to reference PSF library",
          "win": "window size to cut around star, pix",
          "sigma": "sigma level",
          "nrefs": "number of reference PSFs to use",
          "klip": "number of principal components to keep"
        }
      },
      "strehl": {
        "core_min": 0.04,
        "halo_max": 1.0,
        "win": 100,

        "help": {
          "self": "parameters for calculating/characterizing Strehl ratio",
          "core_min": "metrics [arcsec] to judge if an observation is good/bad: min core size",
          "halo_max": "metrics [arcsec] to judge if an observation is good/bad: max halo size",
          "win": "box to cut around star side size, pix"
        }
      },

      "help": {
        "self": "bright star processing pipeline"
      }
    },

    "faint_star": {
      "upsampling_factor": 1,
      "win": 128,
      "n_threads": 4,
      "verbose": true,

      "help": {
        "self": "faint star processing pipeline",
        "upsampling_factor": "output image Fourier up-sampling factor, int",
        "win": "window size",
        "n_threads": "number of threads to use in fftw",
        "verbose": "vocalize what's happening?"
      }
    },

    "extended_object": {
      "help": {
        "self": "extended object processing pipeline"
      }
    },

    "seeing": {
      "fit_model": "Gaussian2D",
      "win": 150,
      "help": {
        "fit_model": "Gaussian2D or Moffat2D",
        "win": "box size",
        "self": "pipeline to process nightly seeing data"
      }
    },

    "help": {
      "self": "define pipeline parameters here"
    }
  }
}